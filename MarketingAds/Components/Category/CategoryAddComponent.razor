@using MarketingAds.Models;
@inject ImageUploadService imageUpload
<div class="modal-dialog">
    <div class="modal-content">
        <div class="modal-header">
            <h5 class="modal-title">Add Category</h5>
            <button type="button" class="btn-close" aria-label="Close" @onclick="HideModal"></button>
        </div>
        <div class="modal-body">
            <RadzenTemplateForm Data="@category" TItem="Category" Submit="@SaveCategory">
                <div class="rz-p-0 rz-p-md-12">
                    <RadzenRow Gap="1rem">
                        <RadzenColumn Size="12">
                            <RadzenStack>
                                <RadzenFormField Text="Category Name:" Variant="Variant.Filled">
                                    <ChildContent>
                                        <RadzenTextBox @bind-Value="category.CategoryName" Name="CategoryName"  Style="width: 100%;" />
                                    </ChildContent>
                                    <Helper>
                                        <RadzenRequiredValidator Component="CategoryName" Text="Category name is required." />
                                    </Helper>
                                </RadzenFormField>
                                <InputFile OnChange="HandleFileUpload" />

                                <RadzenFormField Text="Status:" Variant="Variant.Filled">
                                    <ChildContent>
                                        <RadzenDropDown @bind-Value="category.StatusId" Data="@statusOptions" TextProperty="Name" ValueProperty="Id" Name="StatusId" Style="width: 100%;" Required="true" />
                                    </ChildContent>
                                    <Helper>
                                        <RadzenRequiredValidator Component="StatusId" Text="Status is required." />
                                    </Helper>
                                </RadzenFormField>

                                <RadzenButton Text="Add" ButtonStyle="ButtonStyle.Primary" Type="Submit" Class="mt-3" />
                            </RadzenStack>
                        </RadzenColumn>
                    </RadzenRow>

                </div>
            </RadzenTemplateForm>

        </div>
    </div>
</div>
@code {
    [Parameter]
    public Category category { get; set; }
    [Parameter]
    public EventCallback HideModal { get; set; }
    [Parameter]
    public EventCallback SaveCategory { get; set; }
    [Parameter]
    public List<Category> allCategory { get; set; }
    [Parameter]
    public List<Status> statusOptions { get; set; }
    public string? imagePath { get; set; }
    [Parameter]
    public EventCallback<string> ImagePathChanged { get; set; }
    private async Task HandleFileUpload(InputFileChangeEventArgs e)
    {
        var file = e.File;

        using (var stream = file.OpenReadStream())
        {
            var fileName = file.Name;
            var filePath = await imageUpload.UploadImage(stream, fileName);
            imagePath = filePath;

            if (ImagePathChanged.HasDelegate)
            {
                await ImagePathChanged.InvokeAsync(imagePath);
            }
            // Optionally, handle the uploaded file path returned from the server
        }
    }
}
