@using MarketingAdsLibrary.Services;
@using MarketingAds.Data;
@using MarketingAds.Models;
@using MarketingAds.Auth;
@using System.Security.Cryptography;
@using System.Text;
@inject IJSRuntime JSRuntime
@inject NavigationManager NavigationManager
@inject  AuthService authService;
@inject AuthStateProvider AuthStateProvider
@page "/Login"
<div class="container-fluid vh-100 d-flex align-items-center justify-content-center">
    <div class="col-md-8 col-lg-6 shadow-lg rounded">
        <div class="row">
            <div class="col-md-6 mb-3 mb-md-0 d-flex align-items-center justify-content-center">
                <img src="./css/open-iconic/Image/Login.jpg" class="img-fluid" alt="Login Image">
            </div>
            <div class="col-md-6 d-flex align-items-center justify-content-center">
                <div>
                    <h1 class="text-center mb-4">Log In</h1>
                    <RadzenTemplateForm TItem="User" Data=@user Submit=@HandleLogIn>
                        <RadzenRow Gap="1rem">
                            <RadzenColumn Size="12">
                                <RadzenStack>
                                    @if (visible)
                                    {
                                        <RadzenAlert AlertStyle="AlertStyle.Danger" ShowIcon="false" Variant="Variant.Flat" Shade="Shade.Lighter">
                                            Incorrect Information
                                        </RadzenAlert>
                                    }
                                    <RadzenFormField Text="Username">
                                        <ChildContent>
                                            <RadzenTextBox Name="Username" @bind-Value="user.Username" />
                                        </ChildContent>
                                        <Helper>
                                            <RadzenRequiredValidator Component="Username" Text="Username is required." />
                                        </Helper>
                                    </RadzenFormField>
                                    <RadzenFormField Text="Password">
                                        <ChildContent>
                                            <RadzenPassword Name="Password" @bind-Value="user.PasswordHash" />
                                        </ChildContent>
                                        <Helper>
                                            <RadzenRequiredValidator Component="Password" Text="Password is required." />
                                        </Helper>
                                    </RadzenFormField>
                                    <div class="text-center">
                                        <RadzenButton ButtonType="ButtonType.Submit" Text="Login"></RadzenButton>
                                    </div>
                                </RadzenStack>
                            </RadzenColumn>
                        </RadzenRow>
                    </RadzenTemplateForm>
                    <div class="text-center mt-3">
                        <a href="/CreateAccount">Sign Up</a>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>








@code {
    Variant variant = Variant.Outlined;
    private User user = new User();
    bool visible = false;
    private async Task HandleLogIn()
    {


        var loginUser =await authService.LogIn(user);
        if (loginUser != null)
        {

            await AuthStateProvider.UpdateAuthenticationState(new UserSession
            {
                    Email = loginUser.Email,
                    UserRole = loginUser.UserRole,
                    UserId = loginUser.UserID

            });
            if (loginUser.UserRole == "Admin")
            {
                NavigationManager.NavigateTo("/Status", true);

            }
            else if (loginUser.UserRole == "Buyer")
            {
                NavigationManager.NavigateTo("/user/product", true);

            }
        }
        else
        {
            visible =true;

        }

        user = new User();


    }

  
}