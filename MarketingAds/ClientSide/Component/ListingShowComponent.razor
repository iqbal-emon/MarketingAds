@page "/listing/{CategoryID}"
@using MarketingAds.Models;
@using MarketingAdsLibrary.Services;
@inject CategoryService categoryService;
<div class="container mt-5 py-5 mb-5" >
    <div class="row align-items-start">
        @if (listings != null && listings.Any())
        {
            @foreach (var product in listings)
            {
                <div class=" mt-4 h-50" style="width:320px">
                    <a style="text-decoration: none;" href="/product/details/@product.ListingID">
                        <div class="card" id="custom-card">
                            <div>
                                @if (product.Images != null && product.Images.Any())
                                {
                                    <img src="https://localhost:7235\@product.Images.FirstOrDefault()?.ImageURL" class="card-img-top" alt="Category Image" style="height: 200px;">
                                }

                            </div>

                            <div class="card-body " id="custom-card-body">
                                <h6 id="price"> @product.Price</h6>
                                <h6 class="card-title">  @product.Title</h6>
                                <h6 id="location"> <span class="oi oi-map-marker" aria-hidden="true"></span> @product?.Location?.LocationName</h6>
                                <h6 id="category"> <span class="oi oi-tags" aria-hidden="true"></span>@product?.Category?.CategoryName</h6>
                                <h6 id="time">
                                    @{
                                        if (product?.PostedDate != null)
                                        {
                                            var timeDifference = DateTime.Now - product.PostedDate.Value;

                                            if (timeDifference.TotalSeconds < 60)
                                            {
                                                @($"{(int)timeDifference.TotalSeconds} seconds ago")
                                                ;
                                            }
                                            else if (timeDifference.TotalMinutes < 60)
                                            {
                                                @($"{(int)timeDifference.TotalMinutes} minutes ago")
                                                ;
                                            }
                                            else if (timeDifference.TotalHours < 24)
                                            {
                                                @($"{(int)timeDifference.TotalHours} hours ago")
                                                ;
                                            }
                                            else if (timeDifference.TotalDays < 30)
                                            {
                                                @($"{(int)timeDifference.TotalDays} days ago")
                                                ;
                                            }
                                            else if (timeDifference.TotalDays < 365)
                                            {
                                                var months = (int)(timeDifference.TotalDays / 30);
                                                @($"{months} {(months == 1 ? "month" : "months")} ago")
                                                ;
                                            }
                                            else
                                            {
                                                var years = (int)(timeDifference.TotalDays / 365);
                                                @($"{years} {(years == 1 ? "year" : "years")} ago")
                                                ;
                                            }
                                        }
                                        else
                                        {
                                            @("")
                                            ;
                                        }
                                    }
                                </h6>


                            </div>
                        </div>
                    </a>
                </div>
            }
        }
    </div>
</div>
@code {
    [Parameter]
    public string? CategoryID { get; set; }
    List<Listing>? listings;
    public int ConvertedCategoryID{ get; set; }

    protected override async Task OnInitializedAsync()
    {
        ConvertedCategoryID = Int32.Parse(CategoryID);
        listings = await categoryService.GetListingBasedCategory(ConvertedCategoryID);
    }
}
